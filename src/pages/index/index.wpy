<style>
  @import './weui/weui-navbar.wxss';
  .container,
  .weui-tab,
  .weui-tab__panel {
    height: 100%;
  }
  .weui-navbar{
    background: #fff;
  }
  .weui-tab__content {
    padding-top: 120rpx;
    background: #fff;
  }

</style>
<template>
  <view class="container">
    <view class="weui-tab">
      <view class="weui-navbar">
        <block wx:for="{{tabs}}" wx:key="{{item.value}}">
          <view id="{{index}}" class="weui-navbar__item {{activeIndex == index ? 'weui-bar__item_on' : ''}}" bindtap="tabClick({{item.value}})">
            <view class="weui-navbar__title">{{item.lable}}</view>
          </view>
        </block>
        <view class="weui-navbar__slider" style="left: {{sliderLeft}}px; transform: translateX({{sliderOffset}}px); -webkit-transform: translateX({{sliderOffset}}px);"></view>
      </view>
      <view class="weui-tab__panel">
        <newsScrollView class="weui-tab__content" :newTabs.sync="newTabs" :hideBottom.sync="hideBottom" :refreshTime.sync="refreshTime"
          :allPages.sync="allPages" :currentPage.sync="currentPage" :loadMoreData.sync="loadMoreData"></newsScrollView>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import newsScrollView from '@/components/newsScrollView/index'
  import * as util from '../../lib/util.js'
  import {
    queryAppNews
  } from '../../api/api.js'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '最新资讯'
    }
    components = {
      newsScrollView: newsScrollView
    }

    data = {
      tabs: [{
        lable: '最新新闻',
        value: 1
      }, {
        lable: '最新公告',
        value: 2
      }],
      activeIndex: 0,
      sliderOffset: 0,
      sliderLeft: 0,
      newsType: 1,
      hideBottom: true,
      refreshTime: '',
      newTabs: [],
      allPages: '',
      currentPage: 1,
      loadMoreData: '加载更多……'
    }
    methods = {
      tabClick: function (data, e) {
        this.newTabs = []
        this.currentPage = 1
        this.sliderOffset = e.currentTarget.offsetLeft
        this.activeIndex = e.currentTarget.id
        this.newsType = data
        this.getData(data)
      }
    }
    getData(type) {
      let getExtConfig = wepy.getExtConfigSync ? wepy.getExtConfigSync() : {}
      let para = {
        mid: getExtConfig.businessInfo.mid,
        title_type: type,
        numPerPage: '10',
        page: this.currentPage
      }
      queryAppNews(para).then(res => {
        let tempArray = this.newTabs
        tempArray = tempArray.concat(res.data.miniNewsList)
        this.allPages = res.data.totalCount
        for (let i = 0; i < tempArray.length; i++) {
          let element = tempArray[i].gmt_create
          tempArray[i].gmt_create = util.formatDate.format(new Date(element), 'yyyy-MM-dd')
        }
        this.newTabs = tempArray
        if (this.allPages === this.newTabs.length) {
          this.hideBottom = false
          this.loadMoreData = '没有更多了'
        } else {
          this.hideBottom = true
        }
        this.$apply()
      })
    }
    async startTop() {
      var self = this
      // 当前页是最后一页
      if (self.newTabs.length === self.allPages) {
        self.hideBottom = false
        self.loadMoreData = '没有更多了'
        return
      }
      let tempCurrentPage = self.currentPage
      tempCurrentPage = tempCurrentPage + 1
      self.currentPage = tempCurrentPage
      self.hideBottom = false
      self.getData(this.newsType)
      self.$apply()
    }
    onPullDownRefresh() {
      console.log('我被拉到顶了')
      this.newTabs = []
      this.currentPage = 1
      this.getData(this.newsType)
      wepy.stopPullDownRefresh()
      setTimeout(() => {
        wepy.showToast({
          title: '刷新成功',
          icon: 'success',
          duration: 2000
        })
      }, 500)
    }
    onReachBottom() {
      console.log('我被拉到底了')
      this.startTop()
    }
    async onLoad() {
      var date = new Date()
      this.refreshTime = date.toLocaleTimeString()
      this.getData(1)
      let getSystemInfo = await wepy.getSystemInfo()
      let sliderWidth = getSystemInfo.windowWidth / 2 - 70
      this.sliderLeft = (getSystemInfo.windowWidth / this.tabs.length - sliderWidth) / 2
      this.sliderOffset = getSystemInfo.windowWidth / this.tabs.length * this.activeIndex
    }
  }

</script>
